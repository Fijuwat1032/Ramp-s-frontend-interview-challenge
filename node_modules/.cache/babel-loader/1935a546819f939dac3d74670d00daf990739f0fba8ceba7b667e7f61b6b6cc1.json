{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport function usePaginatedTransactions() {\n  _s();\n  const [data, setData] = useState(null);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const fetchAll = async () => {\n    if (!hasMore) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/transactions?page=${page}`); // Adjust this URL as needed\n      const result = await response.json();\n      if (result.data.length === 0 || result.nextPage === null) {\n        setHasMore(false); // No more pages to load\n      }\n      setData(prevData => ({\n        ...result,\n        data: [...((prevData === null || prevData === void 0 ? void 0 : prevData.data) || []), ...result.data]\n      }));\n      setPage(prevPage => prevPage + 1);\n    } catch (error) {\n      console.error(\"Failed to fetch transactions:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const invalidateData = () => {\n    setData(null);\n    setPage(1);\n    setHasMore(true);\n  };\n  return {\n    data,\n    fetchAll,\n    invalidateData,\n    loading,\n    hasMore\n  };\n}\n_s(usePaginatedTransactions, \"t+rwD0RY9nDeqminNKV7v6OPbLg=\");","map":{"version":3,"names":["useState","usePaginatedTransactions","_s","data","setData","page","setPage","loading","setLoading","hasMore","setHasMore","fetchAll","response","fetch","result","json","length","nextPage","prevData","prevPage","error","console","invalidateData"],"sources":["C:/Users/waltw/Downloads/ramp-fe-challenge/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { PaginatedResponse, Transaction } from \"../utils/types\";\n\nexport function usePaginatedTransactions() {\n  const [data, setData] = useState<PaginatedResponse<Transaction> | null>(null);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchAll = async () => {\n    if (!hasMore) return;\n\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/transactions?page=${page}`); // Adjust this URL as needed\n      const result: PaginatedResponse<Transaction> = await response.json();\n\n      if (result.data.length === 0 || result.nextPage === null) {\n        setHasMore(false); // No more pages to load\n      }\n\n      setData((prevData) => ({\n        ...result,\n        data: [...(prevData?.data || []), ...result.data],\n      }));\n      setPage((prevPage) => prevPage + 1);\n    } catch (error) {\n      console.error(\"Failed to fetch transactions:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const invalidateData = () => {\n    setData(null);\n    setPage(1);\n    setHasMore(true);\n  };\n\n  return {\n    data,\n    fetchAll,\n    invalidateData,\n    loading,\n    hasMore,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAGhC,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAwC,IAAI,CAAC;EAC7E,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACF,OAAO,EAAE;IAEdD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0BR,IAAI,EAAE,CAAC,CAAC,CAAC;MAChE,MAAMS,MAAsC,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEpE,IAAID,MAAM,CAACX,IAAI,CAACa,MAAM,KAAK,CAAC,IAAIF,MAAM,CAACG,QAAQ,KAAK,IAAI,EAAE;QACxDP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;MAEAN,OAAO,CAAEc,QAAQ,KAAM;QACrB,GAAGJ,MAAM;QACTX,IAAI,EAAE,CAAC,IAAI,CAAAe,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEf,IAAI,KAAI,EAAE,CAAC,EAAE,GAAGW,MAAM,CAACX,IAAI;MAClD,CAAC,CAAC,CAAC;MACHG,OAAO,CAAEa,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BlB,OAAO,CAAC,IAAI,CAAC;IACbE,OAAO,CAAC,CAAC,CAAC;IACVI,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,OAAO;IACLP,IAAI;IACJQ,QAAQ;IACRW,cAAc;IACdf,OAAO;IACPE;EACF,CAAC;AACH;AAACP,EAAA,CA3CeD,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}