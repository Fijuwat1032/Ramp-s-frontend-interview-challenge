{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waltw\\\\Downloads\\\\final\\\\ramp-fe-challenge\\\\ramp-fe-challenge\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const dropdownRef = useRef(null);\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  const updateDropdownPosition = useCallback(() => {\n    if (dropdownRef.current) {\n      const rect = dropdownRef.current.getBoundingClientRect();\n      const {\n        scrollY,\n        scrollX\n      } = window;\n      setDropdownPosition({\n        top: scrollY + rect.top + 63,\n        left: scrollX + rect.left\n      });\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", updateDropdownPosition);\n    window.addEventListener(\"resize\", updateDropdownPosition);\n    return () => {\n      window.removeEventListener(\"scroll\", updateDropdownPosition);\n      window.removeEventListener(\"resize\", updateDropdownPosition);\n    };\n  }, [updateDropdownPosition]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps,\n      inputValue\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            updateDropdownPosition();\n            toggleProps.onClick(event);\n          },\n          ref: dropdownRef,\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 20\n          }, this);\n        }\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"QdnlDy4iQp7c5TRfQwyZc6aJP0A=\");\n_c = InputSelect;\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n  return {\n    top: 0,\n    left: 0\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useEffect","useRef","useState","classNames","jsxDEV","_jsxDEV","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","dropdownRef","selectedItem","updateDropdownPosition","current","rect","getBoundingClientRect","scrollY","scrollX","window","addEventListener","removeEventListener","id","itemToString","item","children","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","ref","style","renderItems","length","map","index","parsedItem","value","_c","getDropdownPosition","target","Element","$RefreshReg$"],"sources":["C:/Users/waltw/Downloads/final/ramp-fe-challenge/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  });\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  const updateDropdownPosition = useCallback(() => {\n    if (dropdownRef.current) {\n      const rect = dropdownRef.current.getBoundingClientRect();\n      const { scrollY, scrollX } = window;\n\n      setDropdownPosition({\n        top: scrollY + rect.top + 63,\n        left: scrollX + rect.left,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", updateDropdownPosition);\n    window.addEventListener(\"resize\", updateDropdownPosition);\n    \n    return () => {\n      window.removeEventListener(\"scroll\", updateDropdownPosition);\n      window.removeEventListener(\"resize\", updateDropdownPosition);\n    };\n  }, [updateDropdownPosition]);\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps();\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                updateDropdownPosition();\n                toggleProps.onClick(event);\n              }}\n              ref={dropdownRef}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>;\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: scrollY + top + 63,\n      left,\n    };\n  }\n\n  return { top: 0, left: 0 };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}